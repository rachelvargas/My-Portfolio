 //**1
 <!--<!DOCTYPE html>
        <html>
        <body>
        
        <h1>JavaScript Arrays</h1>
        <h2>The filter() Method</h2>
        
        <p>Get every element in the array that has a value of 18 or more:</p>
        
        <p id="demo"></p>
        
        <script>
        const ages = [32, 33, 16, 40];
        
        document.getElementById("demo").innerHTML = ages.filter(checkAdult);
        
        function checkAdult(age) {
          return age >= 18;
        }
        </script>
        
        </body>
        </html>
        -->

        <!--const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];

const result = words.filter(word => word.length > 6);

console.log(result);
// expected output: Array ["exuberant", "destruction", "present"]
-->


<!---const result = inventors.filter(inventors => inventors.year -= 1599);
      console.log(result)-->

      <!--let result = inventors.filter(function (e) {
        return e.year -= 1599;
      });

console.log(result);
    -->
//*2
<!--const three = [1, 2, 3];
const doubled = three.map(function (item) {
  return item * 2;
});
console.log(three === doubled, doubled); // false, [2, 4, 6]-->

<!--let  name = inventors.map (function (e) {
        return e.first +  " " + e.last  + "\n"
      });
      console.log(name);
    -->

//*3
<!--<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Array Sort</h2>
<p>Sort the array in descending order:</p>

<p id="demo1"></p>
<p id="demo2"></p>

<script>
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo1").innerHTML = points;

points.sort(function(a, b){return b - a});
document.getElementById("demo2").innerHTML = points;
</script>

</body>
</html>-->
<!--<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>The Array.sort() method sorts the elements of an array.</p>

<p id="demo"></p>

<script>
const points = [40, 100, 1, 5, 25, 10];
points.sort(function(a, b){return a-b});
document.getElementById("demo").innerHTML = points;
</script>

</body>
</html>
-->
<!--Sorting an array of objects by a specified property
The following is an array of employee objects, where each object contains three properties: name,salary and hireDate.

let employees = [
    {name: 'John', salary: 90000, hireDate: "July 1, 2010"},
    {name: 'David', salary: 75000, hireDate: "August 15, 2009"},
    {name: 'Ana', salary: 80000, hireDate: "December 12, 2011"}
];
Sorting objects by a numeric property
The following example shows how to sort the employees by salary in ascending order.

// sort by salary
employees.sort(function (x, y) {
    return x.salary - y.salary;
});

console.table(employees);
Code language: JavaScript (javascript)
Output:

-->

//*4
<!--const sum = [1, 2, 3].reduce(function (result, item) {
  return result + item;
}, 0); // if the `0` is omitted, `1` will be the first `result`, and `2` will be the first `item`-->

<!--More JavaScript Array reduce() examples
Suppose that you have the following shoppingCart array of product objects:

let shoppingCart = [
  {
    product: 'phone',
    qty: 1,
    price: 500,
  },
  {
    product: 'Screen Protector',
    qty: 1,
    price: 10,
  },
  {
    product: 'Memory Card',
    qty: 2,
    price: 20,
  },
];
Code language: JavaScript (javascript)
To calculate the total amount of the products in the shopping cart, you can use the reduce() method, like this:

let total = shoppingCart.reduce(function (previousValue, currentValue) {
  return previousValue + currentValue.qty * currentValue.price;
}, 0);
Code language: JavaScript (javascript)
Output:

550-->

<!--// 4. How many years did all the inventors live?
      let sum = inventors.reduce(function(x, y){
        return x.passed - y.year;
      }, 0);
      //console.log(sum)
-->